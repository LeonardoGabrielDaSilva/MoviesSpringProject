server.error.include-stacktrace=never

server.port=8081
api.security.token.secret=${JWT_SECRET:desenvolvimento}


#Database----------------------------------------------------------------------------


spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:postgresql://localhost:5432/movies_spring_project
spring.datasource.url=jdbc:postgresql://postgres:5432/movies_spring_project
spring.datasource.username=postgres
spring.datasource.password=admin


spring.sql.init.mode=never
spring.datasource.initialize=true
#spring.sql.init.schema-locations=classpath:/data.sql
#spring.sql.init.continue-on-error=true

#spring.datasource.url=jdbc:h2:mem:testdb
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=admin
#spring.datasource.password=admin
#spring.h2.console.enabled=true
#spring.jpa.defer-datasource-initialization= true

#spring.jpa.show-sql=true
# Format SQL statements for readability
#spring.jpa.properties.hibernate.format_sql=true
# Log SQL statements to console
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#Dados do Cache----------------------------------------------------------------------
spring.cache.type=hazelcast
hazelcast.caches.top10Movies.ttl=30

#Dados das APIS de consumo para a base de dados de Movies----------------------------
api.imdb.url=https://imdb-api.com/en/API
api.imdb.key=${IMDB_KEY:k_52a9n88z}

api.tmdb.url=https://api.themoviedb.org/3/
api.tmdb.key=${TMDB_KEY:5838e0701f801eb63fd3791bbd2fa253}



#Dados do Resilience4J---------------------------------------------------------------

#resilience4j.ratelimiter.instances.populateSchema.limitForPeriod=1
#resilience4j.ratelimiter.instances.populateSchema.limitRefreshPeriod=1s
#resilience4j.ratelimiter.instances.populateSchema.timeoutDuration=3s

resilience4j.circuitbreaker.instances.populateSchema.slidingWindowSize: 1
resilience4j.circuitbreaker.instances.populateSchema.minimumNumberOfCalls: 3
resilience4j.circuitbreaker.instances.populateSchema.waitDurationInOpenState: 30s



